// File: backend/package.json
// Extension: .json

{
  "name": "@cpp-mastery-hub/backend",
  "version": "1.0.0",
  "description": "Backend API server for C++ Mastery Hub - Node.js/Express with TypeScript",
  "private": true,
  "author": {
    "name": "C++ Mastery Hub Team",
    "email": "backend@cpp-mastery-hub.com"
  },
  "license": "MIT",
  "main": "dist/server.js",
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "scripts": {
    "dev": "tsx watch src/server.ts",
    "dev:debug": "tsx watch --inspect src/server.ts",
    "build": "tsc && tsc-alias",
    "build:watch": "tsc --watch",
    "start": "node dist/server.js",
    "start:prod": "NODE_ENV=production node dist/server.js",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:e2e": "jest --config jest.e2e.config.js",
    "lint": "eslint src/**/*.ts",
    "lint:fix": "eslint src/**/*.ts --fix",
    "format": "prettier --write \"src/**/*.{ts,js,json}\"",
    "format:check": "prettier --check \"src/**/*.{ts,js,json}\"",
    "type-check": "tsc --noEmit",
    "clean": "rimraf dist coverage",
    "db:generate": "prisma generate",
    "db:push": "prisma db push",
    "db:migrate": "prisma migrate dev",
    "db:migrate:deploy": "prisma migrate deploy",
    "db:migrate:reset": "prisma migrate reset",
    "db:studio": "prisma studio",
    "db:seed": "tsx prisma/seed.ts",
    "db:reset": "prisma migrate reset --force && npm run db:seed",
    "db:deploy": "prisma migrate deploy && npm run db:seed",
    "docker:build": "docker build -t cpp-mastery-backend .",
    "docker:run": "docker run -p 8000:8000 cpp-mastery-backend",
    "health-check": "curl -f http://localhost:8000/api/health || exit 1",
    "benchmark": "tsx benchmarks/api-benchmark.ts",
    "load-test": "artillery run tests/load/api-load-test.yml"
  },
  "dependencies": {
    "@prisma/client": "^5.4.2",
    "express": "^4.18.2",
    "express-rate-limit": "^6.10.0",
    "express-validator": "^7.0.1",
    "helmet": "^7.0.0",
    "cors": "^2.8.5",
    "compression": "^1.7.4",
    "morgan": "^1.10.0",
    "winston": "^3.10.0",
    "winston-daily-rotate-file": "^4.7.1",
    "bcryptjs": "^2.4.3",
    "jsonwebtoken": "^9.0.2",
    "joi": "^17.10.1",
    "multer": "^1.4.5-lts.1",
    "sharp": "^0.32.5",
    "axios": "^1.5.0",
    "socket.io": "^4.7.2",
    "redis": "^4.6.8",
    "ioredis": "^5.3.2",
    "bull": "^4.11.3",
    "nodemailer": "^6.9.5",
    "handlebars": "^4.7.8",
    "swagger-jsdoc": "^6.2.8",
    "swagger-ui-express": "^5.0.0",
    "uuid": "^9.0.1",
    "lodash": "^4.17.21",
    "moment": "^2.29.4",
    "crypto-js": "^4.1.1",
    "dotenv": "^16.3.1",
    "express-async-errors": "^3.1.1",
    "express-openapi-validator": "^5.0.6",
    "express-slow-down": "^1.6.0",
    "http-status-codes": "^2.2.0",
    "nanoid": "^4.0.2",
    "zod": "^3.22.2"
  },
  "devDependencies": {
    "@types/express": "^4.17.17",
    "@types/node": "^20.6.3",
    "@types/bcryptjs": "^2.4.4",
    "@types/jsonwebtoken": "^9.0.3",
    "@types/cors": "^2.8.14",
    "@types/compression": "^1.7.3",
    "@types/morgan": "^1.9.5",
    "@types/multer": "^1.4.7",
    "@types/nodemailer": "^6.4.11",
    "@types/uuid": "^9.0.4",
    "@types/lodash": "^4.14.198",
    "@types/crypto-js": "^4.1.2",
    "@types/jest": "^29.5.5",
    "@types/supertest": "^2.0.12",
    "@types/swagger-jsdoc": "^6.0.1",
    "@types/swagger-ui-express": "^4.1.4",
    "@typescript-eslint/eslint-plugin": "^6.7.2",
    "@typescript-eslint/parser": "^6.7.2",
    "eslint": "^8.49.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-import": "^2.28.1",
    "eslint-plugin-security": "^1.7.1",
    "eslint-plugin-sonarjs": "^0.21.0",
    "jest": "^29.7.0",
    "ts-jest": "^29.1.1",
    "supertest": "^6.3.3",
    "typescript": "^5.2.2",
    "tsx": "^3.13.0",
    "tsc-alias": "^1.8.7",
    "prisma": "^5.4.2",
    "rimraf": "^5.0.1",
    "prettier": "^3.0.3",
    "artillery": "^2.0.0",
    "autocannon": "^7.12.0",
    "nodemon": "^3.0.1"
  },
  "jest": {
    "preset": "ts-jest",
    "testEnvironment": "node",
    "setupFilesAfterEnv": [
      "<rootDir>/tests/setup.ts"
    ],
    "testMatch": [
      "<rootDir>/tests/**/*.test.ts"
    ],
    "collectCoverageFrom": [
      "src/**/*.ts",
      "!src/**/*.d.ts",
      "!src/types/**",
      "!src/**/*.interface.ts"
    ],
    "coverageDirectory": "coverage",
    "coverageReporters": [
      "text",
      "lcov",
      "html"
    ],
    "coverageThreshold": {
      "global": {
        "branches": 80,
        "functions": 80,
        "lines": 80,
        "statements": 80
      }
    },
    "moduleNameMapping": {
      "^@/(.*)$": "<rootDir>/src/$1",
      "^@config/(.*)$": "<rootDir>/src/config/$1",
      "^@services/(.*)$": "<rootDir>/src/services/$1",
      "^@utils/(.*)$": "<rootDir>/src/utils/$1",
      "^@middleware/(.*)$": "<rootDir>/src/api/middleware/$1",
      "^@routes/(.*)$": "<rootDir>/src/api/routes/$1"
    }
  },
  "prettier": {
    "semi": true,
    "trailingComma": "es5",
    "singleQuote": true,
    "printWidth": 100,
    "tabWidth": 2,
    "useTabs": false
  },
  "nodemonConfig": {
    "watch": [
      "src"
    ],
    "ext": "ts",
    "ignore": [
      "src/**/*.test.ts"
    ],
    "exec": "tsx src/server.ts"
  }
}